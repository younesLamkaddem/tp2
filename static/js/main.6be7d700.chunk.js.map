{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Searchbox","placeholder","changed","type","onChange","App","state","books","searchedMonster","fetch","then","response","json","users","setState","this","Filtered","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,+BAAKL,EAAMG,QAAQG,KAAnB,OACA,4BAAIN,EAAMG,QAAQI,aCHbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAP,GACd,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCFvBO,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,QAAhB,OACpB,8BACI,uBAAOC,KAAK,OAAOF,YAAaA,EAAaG,SAAUF,EAASZ,UAAU,eC2BnEe,E,kDA3Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXC,MAAQ,GACRC,gBAAkB,IAJT,E,gEAQO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACP,MAAQM,S,+BAE/B,IAAD,SAE+BE,KAAKT,MAAhCC,EAFJ,EAEIA,MAAQC,EAFZ,EAEYA,gBACVQ,EAAWT,EAAMU,QAAO,SAAAzB,GAAO,OAAIA,EAAQG,KAAKuB,cAAcC,SAASX,EAAgBY,wBAC/F,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,qBAAqBC,QAAS,SAAAmB,GAAC,OAAI,EAAKP,SAAS,CAACN,gBAAkBa,EAAEC,OAAOC,WACpG,cAAC,EAAD,CAAUzB,SAAUkB,W,GAvBVQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6be7d700.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2>{props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'; \r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n    {props.monsters.map(monster =>{\r\n          return <Card key={monster.id} monster={monster}  />\r\n    })}\r\n    </div>  \r\n)","import React from 'react';\r\n\r\nimport './searchbox.styles.css';\r\n\r\nexport const Searchbox =({placeholder , changed}) => (\r\n    <div >\r\n        <input type=\"text\" placeholder={placeholder} onChange={changed} className=\"search\"/>\r\n    </div>\r\n)\r\n","import React , {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {Searchbox } from './components/searchbox/searchbox.component';\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      books : [],\n      searchedMonster : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({books : users}))\n  }\n  render(){\n\n      const { books , searchedMonster} = this.state ; \n      const Filtered = books.filter(monster => monster.name.toLowerCase().includes(searchedMonster.toLocaleLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox placeholder=\"search for monster\" changed={e => this.setState({searchedMonster : e.target.value})} />\n        <CardList monsters={Filtered} />\n\n    </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}